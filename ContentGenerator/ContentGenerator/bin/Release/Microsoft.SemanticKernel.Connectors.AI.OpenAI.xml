<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.SemanticKernel.Connectors.AI.OpenAI</name>
    </assembly>
    <members>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.AddHeaderRequestPolicy">
            <summary>
            Helper class to inject headers into Azure SDK HTTP pipeline
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.AzureOpenAIClientBase">
            <summary>
            Base class for Azure OpenAI clients.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.AzureOpenAIClientBase.Client">
            <summary>
            OpenAI / Azure OpenAI Client
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.AzureOpenAIClientBase.#ctor(System.String,System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.AzureOpenAIClientBase"/> class using API Key authentication.
            </summary>
            <param name="modelId">Azure OpenAI model ID or deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="apiKey">Azure OpenAI API key, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.AzureOpenAIClientBase.#ctor(System.String,System.String,Azure.Core.TokenCredential,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.AzureOpenAIClientBase"/> class supporting AAD authentication.
            </summary>
            <param name="modelId">Azure OpenAI model ID or deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="credential">Token credential, e.g. DefaultAzureCredential, ManagedIdentityCredential, EnvironmentCredential, etc.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.AzureOpenAIClientBase.#ctor(System.String,Azure.AI.OpenAI.OpenAIClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.AzureOpenAIClientBase"/> class using the specified OpenAIClient.
            Note: instances created this way might not have the default diagnostics settings,
            it's up to the caller to configure the client.
            </summary>
            <param name="modelId">Azure OpenAI model ID or deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="openAIClient">Custom <see cref="T:Azure.AI.OpenAI.OpenAIClient"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.AzureOpenAIClientBase.GetClientOptions">
            <summary>
            Options used by the Azure OpenAI client, e.g. User Agent.
            </summary>
            <returns>An instance of <see cref="T:Azure.AI.OpenAI.OpenAIClientOptions"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.AzureOpenAIClientBase.LogActionDetails(System.String)">
            <summary>
            Logs Azure OpenAI action details.
            </summary>
            <param name="callerMemberName">Caller member name. Populated automatically by runtime.</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ChatModelResult">
            <summary> Represents a singular result of a chat completion.</summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ChatModelResult.Id">
            <summary> A unique identifier associated with this chat completion response. </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ChatModelResult.Created">
            <summary>
            The first timestamp associated with generation activity for this completions response,
            represented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ChatModelResult.PromptFilterResults">
            <summary>
            Content filtering results for zero or more prompts in the request.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ChatModelResult.Choice">
            <summary>
            The completion choice associated with this completion result.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ChatModelResult.Usage">
            <summary> Usage information for tokens processed and generated as part of this completions operation. </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ChatModelResult.#ctor(Azure.AI.OpenAI.ChatCompletions,Azure.AI.OpenAI.ChatChoice)">
            <summary> Initializes a new instance of TextModelResult. </summary>
            <param name="completionsData"> A completions response object to populate the fields relative the the response.</param>
            <param name="choiceData"> A choice object to populate the fields relative to the resulting choice.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ChatStreamingResult.GetChatMessageAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ChatStreamingResult.GetStreamingChatMessageAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ChatStreamingResult.GetCompletionAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ChatStreamingResult.GetCompletionStreamingAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase">
            <summary>
            Base class for AI clients that provides common functionality for interacting with OpenAI services.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.ModelId">
            <summary>
            Model Id or Deployment Name
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.Client">
            <summary>
            OpenAI / Azure OpenAI Client
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.Logger">
            <summary>
            Logger instance
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.s_meter">
            <summary>
            Instance of <see cref="T:System.Diagnostics.Metrics.Meter"/> for metrics.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.s_promptTokensCounter">
            <summary>
            Instance of <see cref="T:System.Diagnostics.Metrics.Counter`1"/> to keep track of the number of prompt tokens used.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.s_completionTokensCounter">
            <summary>
            Instance of <see cref="T:System.Diagnostics.Metrics.Counter`1"/> to keep track of the number of completion tokens used.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.s_totalTokensCounter">
            <summary>
            Instance of <see cref="T:System.Diagnostics.Metrics.Counter`1"/> to keep track of the total number of tokens used.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.InternalGetTextResultsAsync(System.String,Microsoft.SemanticKernel.AI.TextCompletion.CompleteRequestSettings,System.Threading.CancellationToken)">
            <summary>
            Creates completions for the prompt and settings.
            </summary>
            <param name="text">The prompt to complete.</param>
            <param name="requestSettings">Request settings for the completion API</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>Completions generated by the remote model</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.InternalGetTextStreamingResultsAsync(System.String,Microsoft.SemanticKernel.AI.TextCompletion.CompleteRequestSettings,System.Threading.CancellationToken)">
            <summary>
            Creates completions streams for the prompt and settings.
            </summary>
            <param name="text">The prompt to complete.</param>
            <param name="requestSettings">Request settings for the completion API</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>Stream the completions generated by the remote model</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.InternalGetEmbeddingsAsync(System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)">
            <summary>
            Generates an embedding from the given <paramref name="data"/>.
            </summary>
            <param name="data">List of strings to generate embeddings for</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>List of embeddings</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.InternalGetChatResultsAsync(Microsoft.SemanticKernel.AI.ChatCompletion.ChatHistory,Microsoft.SemanticKernel.AI.ChatCompletion.ChatRequestSettings,System.Threading.CancellationToken)">
            <summary>
            Generate a new chat message
            </summary>
            <param name="chat">Chat history</param>
            <param name="chatSettings">AI request settings</param>
            <param name="cancellationToken">Async cancellation token</param>
            <returns>Generated chat message in string format</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.InternalGetChatStreamingResultsAsync(System.Collections.Generic.IEnumerable{Microsoft.SemanticKernel.AI.ChatCompletion.ChatMessageBase},Microsoft.SemanticKernel.AI.ChatCompletion.ChatRequestSettings,System.Threading.CancellationToken)">
            <summary>
            Generate a new chat message stream
            </summary>
            <param name="chat">Chat history</param>
            <param name="requestSettings">AI request settings</param>
            <param name="cancellationToken">Async cancellation token</param>
            <returns>Streaming of generated chat message in string format</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.InternalCreateNewChat(System.String)">
            <summary>
            Create a new empty chat instance
            </summary>
            <param name="instructions">Optional chat instructions for the AI service</param>
            <returns>Chat object</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.ClientBase.CaptureUsageDetails(Azure.AI.OpenAI.CompletionsUsage)">
            <summary>
            Captures usage details, including token information.
            </summary>
            <param name="usage">Instance of <see cref="T:Azure.AI.OpenAI.CompletionsUsage"/> with usage details.</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.OpenAIClientBase">
            <summary>
            Base class for OpenAI clients, providing common functionality and properties.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.OpenAIClientBase.Client">
            <summary>
            OpenAI / Azure OpenAI Client
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.OpenAIClientBase.#ctor(System.String,System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.OpenAIClientBase"/> class.
            </summary>
            <param name="modelId">Model name.</param>
            <param name="apiKey">OpenAI API Key.</param>
            <param name="organization">OpenAI Organization Id (usually optional).</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.OpenAIClientBase.#ctor(System.String,Azure.AI.OpenAI.OpenAIClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.OpenAIClientBase"/> class using the specified OpenAIClient.
            Note: instances created this way might not have the default diagnostics settings,
            it's up to the caller to configure the client.
            </summary>
            <param name="modelId">Azure OpenAI model ID or deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="openAIClient">Custom <see cref="T:Azure.AI.OpenAI.OpenAIClient"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.OpenAIClientBase.LogActionDetails(System.String)">
            <summary>
            Logs OpenAI action details.
            </summary>
            <param name="callerMemberName">Caller member name. Populated automatically by runtime.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.OpenAIClientBase.GetClientOptions">
            <summary>
            Options used by the OpenAI client, e.g. User Agent.
            </summary>
            <returns>An instance of <see cref="T:Azure.AI.OpenAI.OpenAIClientOptions"/> with the configured options.</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.RequestFailedExceptionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Azure.RequestFailedException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.RequestFailedExceptionExtensions.ToHttpOperationException(Azure.RequestFailedException)">
            <summary>
            Converts a <see cref="T:Azure.RequestFailedException"/> to an <see cref="T:Microsoft.SemanticKernel.Diagnostics.HttpOperationException"/>.
            </summary>
            <param name="exception">The original <see cref="T:Azure.RequestFailedException"/>.</param>
            <returns>An <see cref="T:Microsoft.SemanticKernel.Diagnostics.HttpOperationException"/> instance.</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.SKChatMessage">
            <summary>
            Chat message representation from Semantic Kernel ChatMessageBase Abstraction
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.SKChatMessage.#ctor(Azure.AI.OpenAI.ChatMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.SKChatMessage"/> class.
            </summary>
            <param name="message">OpenAI SDK chat message representation</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.SKChatMessage.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.SKChatMessage"/> class.
            </summary>
            <param name="role">Role of the author of the message.</param>
            <param name="content">Content of the message.</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.TextModelResult">
            <summary> Represents a singular result of a text completion.</summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.TextModelResult.Id">
            <summary> A unique identifier associated with this text completion response. </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.TextModelResult.Created">
            <summary>
            The first timestamp associated with generation activity for this completions response,
            represented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.TextModelResult.PromptFilterResults">
            <summary>
            Content filtering results for zero or more prompts in the request.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.TextModelResult.Choice">
            <summary>
            The completion choice associated with this completion result.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.TextModelResult.Usage">
            <summary> Usage information for tokens processed and generated as part of this completions operation. </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.AzureSdk.TextModelResult.#ctor(Azure.AI.OpenAI.Completions,Azure.AI.OpenAI.Choice)">
            <summary> Initializes a new instance of TextModelResult. </summary>
            <param name="completionsData"> A completions response object to populate the fields relative the the response.</param>
            <param name="choiceData"> A choice object to populate the fields relative to the resulting choice.</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.AzureChatCompletion">
            <summary>
            Azure OpenAI chat completion client.
            TODO: forward ETW logging to ILogger, see https://learn.microsoft.com/en-us/dotnet/azure/sdk/logging
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.AzureChatCompletion.#ctor(System.String,System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create an instance of the Azure OpenAI chat completion connector with API key auth
            </summary>
            <param name="modelId">Azure OpenAI model ID or deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="apiKey">Azure OpenAI API key, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.AzureChatCompletion.#ctor(System.String,System.String,Azure.Core.TokenCredential,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create an instance of the Azure OpenAI chat completion connector with AAD auth
            </summary>
            <param name="modelId">Azure OpenAI model ID or deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="credentials">Token credentials, e.g. DefaultAzureCredential, ManagedIdentityCredential, EnvironmentCredential, etc.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.AzureChatCompletion.#ctor(System.String,Azure.AI.OpenAI.OpenAIClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new AzureChatCompletion client instance using the specified OpenAIClient
            </summary>
            <param name="modelId">Azure OpenAI model ID or deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="openAIClient">Custom <see cref="T:Azure.AI.OpenAI.OpenAIClient"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.AzureChatCompletion.GetChatCompletionsAsync(Microsoft.SemanticKernel.AI.ChatCompletion.ChatHistory,Microsoft.SemanticKernel.AI.ChatCompletion.ChatRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.AzureChatCompletion.GetStreamingChatCompletionsAsync(Microsoft.SemanticKernel.AI.ChatCompletion.ChatHistory,Microsoft.SemanticKernel.AI.ChatCompletion.ChatRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.AzureChatCompletion.CreateNewChat(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.AzureChatCompletion.GetStreamingCompletionsAsync(System.String,Microsoft.SemanticKernel.AI.TextCompletion.CompleteRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.AzureChatCompletion.GetCompletionsAsync(System.String,Microsoft.SemanticKernel.AI.TextCompletion.CompleteRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.OpenAIChatCompletion">
            <summary>
            OpenAI chat completion client.
            TODO: forward ETW logging to ILogger, see https://learn.microsoft.com/en-us/dotnet/azure/sdk/logging
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.OpenAIChatCompletion.#ctor(System.String,System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create an instance of the OpenAI chat completion connector
            </summary>
            <param name="modelId">Model name</param>
            <param name="apiKey">OpenAI API Key</param>
            <param name="organization">OpenAI Organization Id (usually optional)</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.OpenAIChatCompletion.#ctor(System.String,Azure.AI.OpenAI.OpenAIClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create an instance of the OpenAI chat completion connector
            </summary>
            <param name="modelId">Model name</param>
            <param name="openAIClient">Custom <see cref="T:Azure.AI.OpenAI.OpenAIClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.OpenAIChatCompletion.GetChatCompletionsAsync(Microsoft.SemanticKernel.AI.ChatCompletion.ChatHistory,Microsoft.SemanticKernel.AI.ChatCompletion.ChatRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.OpenAIChatCompletion.GetStreamingChatCompletionsAsync(Microsoft.SemanticKernel.AI.ChatCompletion.ChatHistory,Microsoft.SemanticKernel.AI.ChatCompletion.ChatRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.OpenAIChatCompletion.CreateNewChat(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.OpenAIChatCompletion.GetStreamingCompletionsAsync(System.String,Microsoft.SemanticKernel.AI.TextCompletion.CompleteRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.OpenAIChatCompletion.GetCompletionsAsync(System.String,Microsoft.SemanticKernel.AI.TextCompletion.CompleteRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.OpenAIChatHistory">
            <summary>
            OpenAI Chat content
            See https://platform.openai.com/docs/guides/chat for details
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletion.OpenAIChatHistory.#ctor(System.String)">
            <summary>
            Create a new and empty chat history
            </summary>
            <param name="assistantInstructions">Optional instructions for the assistant</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithData">
            <summary>
            Azure OpenAI Chat Completion with data client.
            More information: <see href="https://learn.microsoft.com/en-us/azure/ai-services/openai/use-your-data-quickstart"/>
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithData.#ctor(Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithDataConfig,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithData"/> class.
            </summary>
            <param name="config">Instance of <see cref="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithDataConfig"/> class with completion configuration.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">Instance of <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithData.CreateNewChat(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithData.GetChatCompletionsAsync(Microsoft.SemanticKernel.AI.ChatCompletion.ChatHistory,Microsoft.SemanticKernel.AI.ChatCompletion.ChatRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithData.GetStreamingChatCompletionsAsync(Microsoft.SemanticKernel.AI.ChatCompletion.ChatHistory,Microsoft.SemanticKernel.AI.ChatCompletion.ChatRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithData.GetCompletionsAsync(System.String,Microsoft.SemanticKernel.AI.TextCompletion.CompleteRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithData.GetStreamingCompletionsAsync(System.String,Microsoft.SemanticKernel.AI.TextCompletion.CompleteRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithDataConfig">
            <summary>
            Required configuration for Azure OpenAI chat completion with data.
            More information: <see href="https://learn.microsoft.com/en-us/azure/ai-services/openai/use-your-data-quickstart"/>
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithDataConfig.CompletionModelId">
            <summary>
            Azure OpenAI model ID or deployment name, see <see href="https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource"/>
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithDataConfig.CompletionEndpoint">
            <summary>
            Azure OpenAI deployment URL, see <see href="https://learn.microsoft.com/azure/cognitive-services/openai/quickstart"/>
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithDataConfig.CompletionApiKey">
            <summary>
            Azure OpenAI API key, see <see href="https://learn.microsoft.com/azure/cognitive-services/openai/quickstart"/>
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithDataConfig.CompletionApiVersion">
            <summary>
            Azure OpenAI Completion API version (e.g. 2023-06-01-preview)
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithDataConfig.DataSourceEndpoint">
            <summary>
            Data source endpoint URL.
            For Azure Cognitive Search, see <see href="https://learn.microsoft.com/en-us/azure/search/search-create-service-portal"/>
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithDataConfig.DataSourceApiKey">
            <summary>
            Data source API key.
            For Azure Cognitive Search keys, see <see href="https://learn.microsoft.com/en-us/azure/search/search-security-api-keys#find-existing-keys"/>
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithDataConfig.DataSourceIndex">
            <summary>
            Data source index name.
            For Azure Cognitive Search indexes, see <see href="https://learn.microsoft.com/en-us/azure/search/search-how-to-create-search-index"/>
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.ChatWithDataModelResult">
            <summary>
            Represents result of a chat completion with data.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.ChatWithDataModelResult.Id">
            <summary>
            A unique identifier associated with chat completion with data response.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.ChatWithDataModelResult.Created">
            <summary>
            The first timestamp associated with generation activity for chat completion with data response,
            represented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.ChatWithDataModelResult.ToolContent">
            <summary>
            Content from data source, including citations.
            For more information see <see href="https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/use-your-data#conversation-history-for-better-results"/>.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.ChatWithDataModelResult.#ctor(System.String,System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.ChatWithDataModelResult"/> class.
            </summary>
            <param name="id">A unique identifier associated with chat completion with data response.</param>
            <param name="created">The first timestamp associated with generation activity for chat completion with data response.</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.CustomClient.OpenAIClientBase">
            <summary>Base type for OpenAI clients.</summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.CustomClient.OpenAIClientBase.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.CustomClient.OpenAIClientBase"/> class.
            </summary>
            <param name="httpClient">The HttpClient used for making HTTP requests.</param>
            <param name="loggerFactory">The ILoggerFactory used to create a logger for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.CustomClient.OpenAIClientBase.AddRequestHeaders(System.Net.Http.HttpRequestMessage)">
            <summary>Adds headers to use for OpenAI HTTP requests.</summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.CustomClient.OpenAIClientBase.ExecuteTextEmbeddingRequestAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously sends a text embedding request for the text.
            </summary>
            <param name="url">URL for the text embedding request API</param>
            <param name="requestBody">Request payload</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>List of text embeddings</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.CustomClient.OpenAIClientBase.ExecuteImageGenerationRequestAsync(System.String,System.String,System.Func{Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.ImageGenerationResponse.Image,System.String},System.Threading.CancellationToken)">
            <summary>
            Run the HTTP request to generate a list of images
            </summary>
            <param name="url">URL for the image generation request API</param>
            <param name="requestBody">Request payload</param>
            <param name="extractResponseFunc">Function to invoke to extract the desired portion of the image generation response.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>List of image URLs</returns>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.CustomClient.OpenAIClientBase._logger">
            <summary>
            Logger
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.CustomClient.OpenAIClientBase._httpClient">
            <summary>
            The HttpClient used for making HTTP requests.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureImageGenerationResponse">
            <summary>
            Image generation response
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureImageGenerationResponse.Result">
            <summary>
            Image generation result
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureImageGenerationResponse.Id">
            <summary>
            Request Id
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureImageGenerationResponse.Status">
            <summary>
            Request Status
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureImageGenerationResponse.Created">
            <summary>
             Creation time
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureImageGenerationResponse.Expires">
            <summary>
            Expiration time of the URL
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureImageOperationStatus">
            <summary>
            Azure image generation response status
            <see herf="https://learn.microsoft.com/en-us/azure/cognitive-services/openai/reference#image-generation" />
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureImageOperationStatus.Succeeded">
            <summary>
            Image generation Succeeded
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureImageOperationStatus.Failed">
            <summary>
            Image generation Failed
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureImageOperationStatus.Running">
            <summary>
            Task is running
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureImageOperationStatus.NotRunning">
            <summary>
            Task is queued but hasn't started yet
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureImageOperationStatus.Deleted">
            <summary>
            The image has been removed from Azure's server.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureImageOperationStatus.Cancelled">
            <summary>
            Task has timed out
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureOpenAIImageGeneration">
            <summary>
            Azure OpenAI Image generation
            <see herf="https://learn.microsoft.com/en-us/azure/cognitive-services/openai/reference#image-generation" />
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureOpenAIImageGeneration.GenerationImageOperation">
            <summary>
            Generation Image Operation path
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureOpenAIImageGeneration.GetImageOperation">
            <summary>
            Get Image Operation path
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureOpenAIImageGeneration._endpoint">
            <summary>
            Azure OpenAI REST API endpoint
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureOpenAIImageGeneration._apiKey">
            <summary>
            Azure OpenAI API key
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureOpenAIImageGeneration._maxRetryCount">
            <summary>
            Maximum number of attempts to retrieve the image generation operation result.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureOpenAIImageGeneration._apiVersion">
            <summary>
            Azure OpenAI Endpoint ApiVersion
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureOpenAIImageGeneration.#ctor(System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,System.Int32,System.String)">
            <summary>
            Create a new instance of Azure OpenAI image generation service
            </summary>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="apiKey">Azure OpenAI API key, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The ILoggerFactory used to create a logger for logging. If null, no logging will be performed.</param>
            <param name="maxRetryCount"> Maximum number of attempts to retrieve the image generation operation result.</param>
            <param name="apiVersion">Azure OpenAI Endpoint ApiVersion</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureOpenAIImageGeneration.#ctor(System.String,System.Net.Http.HttpClient,System.String,Microsoft.Extensions.Logging.ILoggerFactory,System.Int32,System.String)">
            <summary>
            Create a new instance of Azure OpenAI image generation service
            </summary>
            <param name="apiKey">Azure OpenAI API key, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="loggerFactory">The ILoggerFactory used to create a logger for logging. If null, no logging will be performed.</param>
            <param name="maxRetryCount"> Maximum number of attempts to retrieve the image generation operation result.</param>
            <param name="apiVersion">Azure OpenAI Endpoint ApiVersion</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureOpenAIImageGeneration.GenerateImageAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureOpenAIImageGeneration.StartImageGenerationAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Start an image generation task
            </summary>
            <param name="description">Image description</param>
            <param name="width">Image width in pixels</param>
            <param name="height">Image height in pixels</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns> The operationId that identifies the original image generation request. </returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureOpenAIImageGeneration.GetImageGenerationResultAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the results of an image generation operation.
            </summary>
            <param name="operationId">The operationId that identifies the original image generation request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.AzureOpenAIImageGeneration.AddRequestHeaders(System.Net.Http.HttpRequestMessage)">
            <summary>Adds headers to use for Azure OpenAI HTTP requests.</summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.ImageGenerationRequest">
            <summary>
            Image generation request
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.ImageGenerationRequest.Prompt">
            <summary>
            Image prompt
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.ImageGenerationRequest.Size">
            <summary>
            Image size
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.ImageGenerationRequest.Count">
            <summary>
            How many images to generate
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.ImageGenerationRequest.Format">
            <summary>
            Image format, "url" or "b64_json"
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.ImageGenerationResponse">
            <summary>
            Image generation response
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.ImageGenerationResponse.Image">
            <summary>
            OpenAI Image response
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.ImageGenerationResponse.Image.Url">
            <summary>
            URL to the image created
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.ImageGenerationResponse.Image.AsBase64">
            <summary>
            Image content in base64 format
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.ImageGenerationResponse.Images">
            <summary>
            List of possible image generations
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.ImageGenerationResponse.CreatedTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.OpenAIImageGeneration">
            <summary>
            A class for generating images using OpenAI's API.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.OpenAIImageGeneration.OpenAIEndpoint">
            <summary>
            OpenAI REST API endpoint
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.OpenAIImageGeneration._organizationHeaderValue">
            <summary>
            Optional value for the OpenAI-Organization header.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.OpenAIImageGeneration._authorizationHeaderValue">
            <summary>
            Value for the authorization header.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.OpenAIImageGeneration.#ctor(System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.OpenAIImageGeneration"/> class.
            </summary>
            <param name="apiKey">OpenAI API key, see https://platform.openai.com/account/api-keys</param>
            <param name="organization">OpenAI organization id. This is usually optional unless your account belongs to multiple organizations.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.OpenAIImageGeneration.AddRequestHeaders(System.Net.Http.HttpRequestMessage)">
            <summary>Adds headers to use for OpenAI HTTP requests.</summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.ImageGeneration.OpenAIImageGeneration.GenerateImageAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextCompletion.AzureTextCompletion">
            <summary>
            Azure OpenAI text completion client.
            TODO: forward ETW logging to ILogger, see https://learn.microsoft.com/en-us/dotnet/azure/sdk/logging
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextCompletion.AzureTextCompletion.#ctor(System.String,System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new AzureTextCompletion client instance using API Key auth
            </summary>
            <param name="modelId">Azure OpenAI model ID or deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="apiKey">Azure OpenAI API key, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextCompletion.AzureTextCompletion.#ctor(System.String,System.String,Azure.Core.TokenCredential,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new AzureTextCompletion client instance supporting AAD auth
            </summary>
            <param name="modelId">Azure OpenAI model ID or deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="credential">Token credentials, e.g. DefaultAzureCredential, ManagedIdentityCredential, EnvironmentCredential, etc.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextCompletion.AzureTextCompletion.#ctor(System.String,Azure.AI.OpenAI.OpenAIClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new AzureTextCompletion client instance using the specified OpenAIClient
            </summary>
            <param name="modelId">Azure OpenAI model ID or deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="openAIClient">Custom <see cref="T:Azure.AI.OpenAI.OpenAIClient"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextCompletion.AzureTextCompletion.GetStreamingCompletionsAsync(System.String,Microsoft.SemanticKernel.AI.TextCompletion.CompleteRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextCompletion.AzureTextCompletion.GetCompletionsAsync(System.String,Microsoft.SemanticKernel.AI.TextCompletion.CompleteRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextCompletion.OpenAITextCompletion">
            <summary>
            OpenAI text completion service.
            TODO: forward ETW logging to ILogger, see https://learn.microsoft.com/en-us/dotnet/azure/sdk/logging
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextCompletion.OpenAITextCompletion.#ctor(System.String,System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create an instance of the OpenAI text completion connector
            </summary>
            <param name="modelId">Model name</param>
            <param name="apiKey">OpenAI API Key</param>
            <param name="organization">OpenAI Organization Id (usually optional)</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextCompletion.OpenAITextCompletion.GetStreamingCompletionsAsync(System.String,Microsoft.SemanticKernel.AI.TextCompletion.CompleteRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextCompletion.OpenAITextCompletion.GetCompletionsAsync(System.String,Microsoft.SemanticKernel.AI.TextCompletion.CompleteRequestSettings,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.AzureTextEmbeddingGeneration">
            <summary>
            Azure OpenAI text embedding service.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.AzureTextEmbeddingGeneration.#ctor(System.String,System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new AzureTextCompletion client instance using API Key auth
            </summary>
            <param name="modelId">Azure OpenAI model ID or deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="apiKey">Azure OpenAI API key, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.AzureTextEmbeddingGeneration.#ctor(System.String,System.String,Azure.Core.TokenCredential,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new AzureTextCompletion client instance supporting AAD auth
            </summary>
            <param name="modelId">Azure OpenAI model ID or deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="credential">Token credentials, e.g. DefaultAzureCredential, ManagedIdentityCredential, EnvironmentCredential, etc.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.AzureTextEmbeddingGeneration.GenerateEmbeddingsAsync(System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)">
            <summary>
            Generates an embedding from the given <paramref name="data"/>.
            </summary>
            <param name="data">List of strings to generate embeddings for</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>List of embeddings</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.OpenAITextEmbeddingGeneration">
            <summary>
            OpenAI text embedding service.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.OpenAITextEmbeddingGeneration.#ctor(System.String,System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create an instance of the OpenAI text embedding connector
            </summary>
            <param name="modelId">Model name</param>
            <param name="apiKey">OpenAI API Key</param>
            <param name="organization">OpenAI Organization Id (usually optional)</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.OpenAITextEmbeddingGeneration.GenerateEmbeddingsAsync(System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)">
            <summary>
            Generates an embedding from the given <paramref name="data"/>.
            </summary>
            <param name="data">List of strings to generate embeddings for</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>List of embeddings</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.TextEmbeddingRequest">
            <summary>
            A request to create embedding vector representing input text
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.TextEmbeddingRequest.Input">
            <summary>
            Input to embed
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.OpenAITextEmbeddingRequest">
            <summary>
            An OpenAI embedding request
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.OpenAITextEmbeddingRequest.Model">
            <summary>
            Embedding model ID
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.AzureTextEmbeddingRequest">
            <summary>
            An Azure OpenAI embedding request
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.TextEmbeddingResponse">
            <summary>
            A response from an embedding request
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.TextEmbeddingResponse.EmbeddingResponseIndex">
            <summary>
            A single embedding vector
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.TextEmbeddingResponse.EmbeddingResponseIndex.Values">
            <summary>
            The embedding vector
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.TextEmbeddingResponse.EmbeddingResponseIndex.Index">
            <summary>
            Index of the embedding vector
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.AI.OpenAI.TextEmbedding.TextEmbeddingResponse.Embeddings">
            <summary>
            A list of embeddings
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> class to configure OpenAI and AzureOpenAI connectors.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithAzureTextCompletionService(Microsoft.SemanticKernel.KernelBuilder,System.String,System.String,System.String,System.String,System.Boolean,System.Net.Http.HttpClient)">
            <summary>
            Adds an Azure OpenAI text completion service to the list.
            See https://learn.microsoft.com/azure/cognitive-services/openai for service details.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="deploymentName">Azure OpenAI deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="apiKey">Azure OpenAI API key, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithAzureTextCompletionService(Microsoft.SemanticKernel.KernelBuilder,System.String,System.String,Azure.Core.TokenCredential,System.String,System.Boolean,System.Net.Http.HttpClient)">
            <summary>
            Adds an Azure OpenAI text completion service to the list.
            See https://learn.microsoft.com/azure/cognitive-services/openai for service details.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="deploymentName">Azure OpenAI deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="credentials">Token credentials, e.g. DefaultAzureCredential, ManagedIdentityCredential, EnvironmentCredential, etc.</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithAzureTextCompletionService(Microsoft.SemanticKernel.KernelBuilder,System.String,Azure.AI.OpenAI.OpenAIClient,System.String,System.Boolean)">
            <summary>
            Adds an Azure OpenAI text completion service to the list.
            See https://learn.microsoft.com/azure/cognitive-services/openai for service details.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="deploymentName">Azure OpenAI deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="openAIClient">Custom <see cref="T:Azure.AI.OpenAI.OpenAIClient"/>.</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithOpenAITextCompletionService(Microsoft.SemanticKernel.KernelBuilder,System.String,System.String,System.String,System.String,System.Boolean,System.Net.Http.HttpClient)">
            <summary>
            Adds the OpenAI text completion service to the list.
            See https://platform.openai.com/docs for service details.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="modelId">OpenAI model name, see https://platform.openai.com/docs/models</param>
            <param name="apiKey">OpenAI API key, see https://platform.openai.com/account/api-keys</param>
            <param name="orgId">OpenAI organization id. This is usually optional unless your account belongs to multiple organizations.</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithAzureTextEmbeddingGenerationService(Microsoft.SemanticKernel.KernelBuilder,System.String,System.String,System.String,System.String,System.Boolean,System.Net.Http.HttpClient)">
            <summary>
            Adds an Azure OpenAI text embeddings service to the list.
            See https://learn.microsoft.com/azure/cognitive-services/openai for service details.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="deploymentName">Azure OpenAI deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="apiKey">Azure OpenAI API key, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithAzureTextEmbeddingGenerationService(Microsoft.SemanticKernel.KernelBuilder,System.String,System.String,Azure.Core.TokenCredential,System.String,System.Boolean,System.Net.Http.HttpClient)">
            <summary>
            Adds an Azure OpenAI text embeddings service to the list.
            See https://learn.microsoft.com/azure/cognitive-services/openai for service details.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="deploymentName">Azure OpenAI deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="credential">Token credentials, e.g. DefaultAzureCredential, ManagedIdentityCredential, EnvironmentCredential, etc.</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithOpenAITextEmbeddingGenerationService(Microsoft.SemanticKernel.KernelBuilder,System.String,System.String,System.String,System.String,System.Boolean,System.Net.Http.HttpClient)">
            <summary>
            Adds the OpenAI text embeddings service to the list.
            See https://platform.openai.com/docs for service details.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="modelId">OpenAI model name, see https://platform.openai.com/docs/models</param>
            <param name="apiKey">OpenAI API key, see https://platform.openai.com/account/api-keys</param>
            <param name="orgId">OpenAI organization id. This is usually optional unless your account belongs to multiple organizations.</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithAzureChatCompletionService(Microsoft.SemanticKernel.KernelBuilder,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Net.Http.HttpClient)">
            <summary>
            Adds the Azure OpenAI ChatGPT completion service to the list.
            See https://platform.openai.com/docs for service details.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="deploymentName">Azure OpenAI deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="apiKey">Azure OpenAI API key, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="alsoAsTextCompletion">Whether to use the service also for text completion, if supported</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithAzureChatCompletionService(Microsoft.SemanticKernel.KernelBuilder,System.String,System.String,Azure.Core.TokenCredential,System.Boolean,System.String,System.Boolean,System.Net.Http.HttpClient)">
            <summary>
            Adds the Azure OpenAI ChatGPT completion service to the list.
            See https://platform.openai.com/docs for service details.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="deploymentName">Azure OpenAI deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="credentials">Token credentials, e.g. DefaultAzureCredential, ManagedIdentityCredential, EnvironmentCredential, etc.</param>
            <param name="alsoAsTextCompletion">Whether to use the service also for text completion, if supported</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithAzureChatCompletionService(Microsoft.SemanticKernel.KernelBuilder,Microsoft.SemanticKernel.Connectors.AI.OpenAI.ChatCompletionWithData.AzureChatCompletionWithDataConfig,System.Boolean,System.String,System.Boolean,System.Net.Http.HttpClient)">
            <summary>
            Adds the Azure OpenAI chat completion with data service to the list.
            More information: <see href="https://learn.microsoft.com/en-us/azure/ai-services/openai/use-your-data-quickstart"/>
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance.</param>
            <param name="config">Required configuration for Azure OpenAI chat completion with data.</param>
            <param name="alsoAsTextCompletion">Whether to use the service also for text completion, if supported.</param>
            <param name="serviceId">A local identifier for the given AI service.</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithOpenAIChatCompletionService(Microsoft.SemanticKernel.KernelBuilder,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Net.Http.HttpClient)">
            <summary>
            Adds the OpenAI ChatGPT completion service to the list.
            See https://platform.openai.com/docs for service details.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="modelId">OpenAI model name, see https://platform.openai.com/docs/models</param>
            <param name="apiKey">OpenAI API key, see https://platform.openai.com/account/api-keys</param>
            <param name="orgId">OpenAI organization id. This is usually optional unless your account belongs to multiple organizations.</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="alsoAsTextCompletion">Whether to use the service also for text completion, if supported</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithAzureChatCompletionService(Microsoft.SemanticKernel.KernelBuilder,System.String,Azure.AI.OpenAI.OpenAIClient,System.Boolean,System.String,System.Boolean)">
            <summary>
            Adds the Azure OpenAI ChatGPT completion service to the list.
            See https://platform.openai.com/docs for service details.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="deploymentName">Azure OpenAI deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="openAIClient">Custom <see cref="T:Azure.AI.OpenAI.OpenAIClient"/> for HTTP requests.</param>
            <param name="alsoAsTextCompletion">Whether to use the service also for text completion, if supported</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithOpenAIChatCompletionService(Microsoft.SemanticKernel.KernelBuilder,System.String,Azure.AI.OpenAI.OpenAIClient,System.Boolean,System.String,System.Boolean)">
            <summary>
            Adds the OpenAI ChatGPT completion service to the list.
            See https://platform.openai.com/docs for service details.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="deploymentName">Azure OpenAI deployment name, see https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource</param>
            <param name="openAIClient">Custom <see cref="T:Azure.AI.OpenAI.OpenAIClient"/> for HTTP requests.</param>
            <param name="alsoAsTextCompletion">Whether to use the service also for text completion, if supported</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithOpenAIImageGenerationService(Microsoft.SemanticKernel.KernelBuilder,System.String,System.String,System.String,System.Boolean,System.Net.Http.HttpClient)">
            <summary>
            Add the OpenAI DallE image generation service to the list
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="apiKey">OpenAI API key, see https://platform.openai.com/account/api-keys</param>
            <param name="orgId">OpenAI organization id. This is usually optional unless your account belongs to multiple organizations.</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <returns>Self instance</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIKernelBuilderExtensions.WithAzureOpenAIImageGenerationService(Microsoft.SemanticKernel.KernelBuilder,System.String,System.String,System.String,System.Boolean,System.Net.Http.HttpClient,System.Int32)">
            <summary>
            Add the  Azure OpenAI DallE image generation service to the list
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.KernelBuilder"/> instance</param>
            <param name="endpoint">Azure OpenAI deployment URL, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="apiKey">Azure OpenAI API key, see https://learn.microsoft.com/azure/cognitive-services/openai/quickstart</param>
            <param name="serviceId">A local identifier for the given AI service</param>
            <param name="setAsDefault">Whether the service should be the default for its type.</param>
            <param name="httpClient">Custom <see cref="T:System.Net.Http.HttpClient"/> for HTTP requests.</param>
            <param name="maxRetryCount">Maximum number of attempts to retrieve the image generation operation result.</param>
            <returns>Self instance</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.OpenAIModelResultExtension">
            <summary>
            Provides extension methods for working with OpenAI model results.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIModelResultExtension.GetOpenAITextResult(Microsoft.SemanticKernel.Orchestration.ModelResult)">
            <summary>
            Retrieves a typed <see cref="T:Azure.AI.OpenAI.Completions"/> OpenAI / AzureOpenAI result from text completion prompt.
            </summary>
            <param name="resultBase">Current context</param>
            <returns>OpenAI / AzureOpenAI result<see cref="T:Azure.AI.OpenAI.Completions"/></returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.OpenAIModelResultExtension.GetOpenAIChatResult(Microsoft.SemanticKernel.Orchestration.ModelResult)">
            <summary>
            Retrieves a typed <see cref="T:Azure.AI.OpenAI.ChatCompletions"/> OpenAI / AzureOpenAI result from chat completion prompt.
            </summary>
            <param name="resultBase">Current context</param>
            <returns>OpenAI / AzureOpenAI result<see cref="T:Azure.AI.OpenAI.ChatCompletions"/></returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType">
            <summary>
            Contains the values of status codes defined for HTTP in the response to an HTTP request.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Continue">
            <summary>
            The server has received the request headers and the client should proceed to send the request body.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.SwitchingProtocols">
            <summary>
            The server is switching protocols according to the Upgrade header sent by the client.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Processing">
            <summary>
            The server is processing the request, but has not completed it yet.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.EarlyHints">
            <summary>
            The server is sending some hints about the response before the final status code.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.OK">
            <summary>
            The request has succeeded and the response contains the requested resource.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Created">
            <summary>
            The request has been fulfilled and a new resource has been created.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Accepted">
            <summary>
            The request has been accepted for further processing, but the processing has not been completed.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.NonAuthoritativeInformation">
            <summary>
            The server is returning a response from a different source than the requested one, but the response is still valid.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.NoContent">
            <summary>
            The request has been successfully processed, but the server does not need to return any content.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.ResetContent">
            <summary>
            The server has fulfilled the request and the client should reset the document view.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.PartialContent">
            <summary>
            The server is returning a partial response to a range request.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.MultiStatus">
            <summary>
            The server is returning a response that contains multiple status codes for different parts of the request.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.AlreadyReported">
            <summary>
            The server has already reported the status of the request and does not need to repeat it.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.IMUsed">
            <summary>
            The server is returning a response that is the result of applying a delta encoding to the requested resource.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Ambiguous">
            <summary>
            The requested resource has multiple representations and the client should choose one of them.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.MultipleChoices">
            <summary>
            The requested resource has multiple representations and the client should choose one of them.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Moved">
            <summary>
            The requested resource has been permanently moved to a new location and the client should use the new URI.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.MovedPermanently">
            <summary>
            The requested resource has been permanently moved to a new location and the client should use the new URI.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Found">
            <summary>
            The requested resource has been temporarily moved to a new location and the client should use the new URI.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Redirect">
            <summary>
            The requested resource has been temporarily moved to a new location and the client should use the new URI.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.RedirectMethod">
            <summary>
            The requested resource can be found at a different URI and the client should use a GET method to retrieve it.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.SeeOther">
            <summary>
            The requested resource can be found at a different URI and the client should use a GET method to retrieve it.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.NotModified">
            <summary>
            The requested resource has not been modified since the last request and the client can use the cached version.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.UseProxy">
            <summary>
            The requested resource is only available through a proxy and the client should use the proxy URI.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Unused">
            <summary>
            This status code is no longer used and is reserved for future use.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.RedirectKeepVerb">
            <summary>
            The requested resource has been temporarily moved to a new location and the client should use the same method to access it.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.TemporaryRedirect">
            <summary>
            The requested resource has been temporarily moved to a new location and the client should use the same method to access it.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.PermanentRedirect">
            <summary>
            The requested resource has been permanently moved to a new location and the client should use the same method to access it.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.BadRequest">
            <summary>
            The server cannot process the request due to a malformed syntax or an invalid parameter.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Unauthorized">
            <summary>
            The request requires authentication and the client should provide valid credentials.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.PaymentRequired">
            <summary>
            The request requires payment and the client should provide valid payment information.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Forbidden">
            <summary>
            The server has understood the request, but refuses to authorize it due to insufficient permissions or other reasons.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.NotFound">
            <summary>
            The server cannot find the requested resource and the client should not repeat the request.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.MethodNotAllowed">
            <summary>
            The server does not support the method used by the request and the client should use a different method.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.NotAcceptable">
            <summary>
            The server cannot produce a response that matches the preferences specified by the request headers.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.ProxyAuthenticationRequired">
            <summary>
            The request requires authentication through a proxy and the client should provide valid proxy credentials.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.RequestTimeout">
            <summary>
            The server did not receive the complete request within the time limit and the client should try again later.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Conflict">
            <summary>
            The request could not be completed due to a conflict with the current state of the resource.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Gone">
            <summary>
            The requested resource is no longer available and the server does not know the new location.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.LengthRequired">
            <summary>
            The request requires a Content-Length header and the client should provide it.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.PreconditionFailed">
            <summary>
            The request does not meet the preconditions specified by the request headers and the server cannot process it.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.RequestEntityTooLarge">
            <summary>
            The request entity is too large and the server cannot process it.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.RequestUriTooLong">
            <summary>
            The request URI is too long and the server cannot process it.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.UnsupportedMediaType">
            <summary>
            The request entity has a media type that the server does not support or cannot handle.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.RequestedRangeNotSatisfiable">
            <summary>
            The request specifies a range that the server cannot satisfy or is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.ExpectationFailed">
            <summary>
            The request contains an Expect header that the server cannot meet or is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.MisdirectedRequest">
            <summary>
            The request was directed to a server that is not able to produce a response.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.UnprocessableEntity">
            <summary>
            The request entity is well-formed, but cannot be processed by the server due to semantic errors.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.Locked">
            <summary>
            The requested resource is locked and the client should release it before modifying it.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.FailedDependency">
            <summary>
            The request failed due to a dependency on another request that failed.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.UpgradeRequired">
            <summary>
            The request requires the server to upgrade to a different protocol and the client should use the Upgrade header to specify it.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.PreconditionRequired">
            <summary>
            The request requires the server to apply preconditions and the client should use the If-Match or If-Unmodified-Since headers to specify them.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.TooManyRequests">
            <summary>
            The client has sent too many requests in a given time and the server rejects them to prevent overload.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.RequestHeaderFieldsTooLarge">
            <summary>
            The request contains headers that are too large and the server cannot process them.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.UnavailableForLegalReasons">
            <summary>
            The server is denying access to the requested resource for legal reasons and the client should not repeat the request.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.InternalServerError">
            <summary>
            The server encountered an unexpected error and cannot fulfill the request.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.NotImplemented">
            <summary>
            The server does not support the functionality required by the request and the client should not repeat the request.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.BadGateway">
            <summary>
            The server received an invalid response from an upstream server and cannot fulfill the request.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.ServiceUnavailable">
            <summary>
            The server is temporarily unavailable due to maintenance or overload and the client should try again later.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.GatewayTimeout">
            <summary>
            The server did not receive a timely response from an upstream server and cannot fulfill the request.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.HttpVersionNotSupported">
            <summary>
            The server does not support the HTTP version used by the request and the client should use a different version.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.VariantAlsoNegotiates">
            <summary>
            The server has a configuration error and cannot negotiate a suitable representation for the requested resource.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.InsufficientStorage">
            <summary>
            The server has insufficient storage space to complete the request.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.LoopDetected">
            <summary>
            The server detected an infinite loop while processing the request.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.NotExtended">
            <summary>
            The request requires additional extensions that the server does not support or cannot handle.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Diagnostics.HttpStatusCodeType.NetworkAuthenticationRequired">
            <summary>
            The request requires authentication at the network level and the client should provide valid network credentials.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.Verify.NotNull(System.Object,System.String)">
            <summary>
            Equivalent of ArgumentNullException.ThrowIfNull
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.Verify.ParametersUniqueness(System.Collections.Generic.IList{Microsoft.SemanticKernel.SkillDefinition.ParameterView})">
            <summary>
            Make sure every function parameter name is unique
            </summary>
            <param name="parameters">List of parameters</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Text.ReadOnlyMemoryConverter">
            <summary>Provides a converter for <see cref="T:System.ReadOnlyMemory`1"/>.</summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Text.ReadOnlyMemoryConverter.s_arrayConverter">
            <summary>An instance of a converter for float[] that all operations delegate to.</summary>
        </member>
        <member name="T:System.ExceptionExtensions">
            <summary>
            Exception extension methods.
            </summary>
        </member>
        <member name="M:System.ExceptionExtensions.IsCriticalException(System.Exception)">
            <summary>
            Check if an exception is of a type that should not be caught by the kernel.
            </summary>
            <param name="ex">Exception.</param>
            <returns>True if <paramref name="ex"/> is a critical exception and should not be caught.</returns>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>Specifies that null is allowed as an input even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>Specifies that null is disallowed as an input even if the corresponding type allows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>Specifies that an output may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>Specifies that an output will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, the parameter may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter may be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>, the parameter will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>Specifies that the output will be non-null if the named parameter is non-null.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>Initializes the attribute with the associated parameter name.</summary>
            <param name="parameterName">
            The associated parameter name.  The output will be non-null if the argument to the parameter specified is non-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>Gets the associated parameter name.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>Applied to a method that will never return under any circumstance.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>Specifies that the method will not return if the associated Boolean parameter is passed the specified value.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified parameter value.</summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable by diagnostics if the argument to
            the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>Gets the condition parameter value.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>Specifies that the method or property will ensure that the listed field and property members have not-null values.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>Initializes the attribute with a field or property member.</summary>
            <param name="member">
            The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>Initializes the attribute with the list of field and property members.</summary>
            <param name="members">
            The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>Gets field or property member names.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>Specifies that the method or property will ensure that the listed field and property members have not-null values when returning with the specified return value condition.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>Initializes the attribute with the specified return value condition and a field or property member.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
            <param name="member">
            The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>Initializes the attribute with the specified return value condition and list of field and property members.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
            <param name="members">
            The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>Gets field or property member names.</summary>
        </member>
        <member name="M:System.Linq.AsyncEnumerable.AnyAsync``1(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Determines whether any element of an async-enumerable sequence satisfies a condition.
            </summary>
            <typeparam name="TSource">The type of the elements in the source sequence.</typeparam>
            <param name="source">An async-enumerable sequence whose elements to apply the predicate to.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="cancellationToken">The optional cancellation token to be used for cancelling the sequence at any time.</param>
            <returns>An async-enumerable sequence containing a single element determining whether any elements in the source sequence pass the test in the specified predicate.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="predicate"/> is null.</exception>
            <remarks>The return type of this operator differs from the corresponding operator on IEnumerable in order to retain asynchronous behavior.</remarks>
        </member>
        <member name="M:System.EnvExtensions.GetBoolEnvVar(System.String)">
            <summary>
            Source: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/src/DiagnosticsOptions.cs
            Values: https://learn.microsoft.com/en-us/dotnet/api/azure.core.diagnosticsoptions.istelemetryenabled?view=azure-dotnet
            </summary>
        </member>
        <member name="M:HttpClientExtensions.SendWithSuccessCheckAsync(System.Net.Http.HttpClient,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
            <summary>
            Sends an HTTP request using the provided <see cref="T:System.Net.Http.HttpClient"/> instance and checks for a successful response.
            If the response is not successful, it logs an error and throws an <see cref="T:Microsoft.SemanticKernel.Diagnostics.HttpOperationException"/>.
            </summary>
            <param name="client">The <see cref="T:System.Net.Http.HttpClient"/> instance to use for sending the request.</param>
            <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to send.</param>
            <param name="completionOption">Indicates if HttpClient operations should be considered completed either as soon as a response is available,
            or after reading the entire response message including the content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for canceling the request.</param>
            <returns>The <see cref="T:System.Net.Http.HttpResponseMessage"/> representing the response.</returns>
        </member>
        <member name="M:HttpClientExtensions.SendWithSuccessCheckAsync(System.Net.Http.HttpClient,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sends an HTTP request using the provided <see cref="T:System.Net.Http.HttpClient"/> instance and checks for a successful response.
            If the response is not successful, it logs an error and throws an <see cref="T:Microsoft.SemanticKernel.Diagnostics.HttpOperationException"/>.
            </summary>
            <param name="client">The <see cref="T:System.Net.Http.HttpClient"/> instance to use for sending the request.</param>
            <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to send.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for canceling the request.</param>
            <returns>The <see cref="T:System.Net.Http.HttpResponseMessage"/> representing the response.</returns>
        </member>
        <member name="T:HttpClientProvider">
            <summary>
            Provides functionality for retrieving instances of HttpClient.
            </summary>
        </member>
        <member name="M:HttpClientProvider.GetHttpClient(Microsoft.SemanticKernel.Http.IDelegatingHandlerFactory,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Retrieves an instance of HttpClient.
            </summary>
            <param name="httpHandlerFactory">The <see cref="T:Microsoft.SemanticKernel.Http.IDelegatingHandlerFactory"/> to be used when the HttpClient is not provided already</param>
            <param name="httpClient">An optional pre-existing instance of HttpClient.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to use for logging. If null, no logging will be performed.</param>
            <returns>An instance of HttpClient.</returns>
        </member>
        <member name="T:HttpContentExtensions">
            <summary>
            Provides extension methods for working with HTTP content in a way that translates HttpRequestExceptions into HttpOperationExceptions.
            </summary>
        </member>
        <member name="M:HttpContentExtensions.ReadAsStringWithExceptionMappingAsync(System.Net.Http.HttpContent)">
            <summary>
            Reads the content of the HTTP response as a string and translates any HttpRequestException into an HttpOperationException.
            </summary>
            <param name="httpContent">The HTTP content to read.</param>
            <returns>A string representation of the HTTP content.</returns>
        </member>
        <member name="M:HttpContentExtensions.ReadAsStreamAndTranslateExceptionAsync(System.Net.Http.HttpContent)">
            <summary>
            Reads the content of the HTTP response as a stream and translates any HttpRequestException into an HttpOperationException.
            </summary>
            <param name="httpContent">The HTTP content to read.</param>
            <returns>A stream representing the HTTP content.</returns>
        </member>
        <member name="M:HttpContentExtensions.ReadAsByteArrayAndTranslateExceptionAsync(System.Net.Http.HttpContent)">
            <summary>
            Reads the content of the HTTP response as a byte array and translates any HttpRequestException into an HttpOperationException.
            </summary>
            <param name="httpContent">The HTTP content to read.</param>
            <returns>A byte array representing the HTTP content.</returns>
        </member>
        <member name="T:NonDisposableHttpClientHandler">
            <summary>
            Represents a singleton implementation of <see cref="T:System.Net.Http.HttpClientHandler"/> that is not disposable.
            </summary>
        </member>
        <member name="M:NonDisposableHttpClientHandler.#ctor">
            <summary>
            Private constructor to prevent direct instantiation of the class.
            </summary>
        </member>
        <member name="P:NonDisposableHttpClientHandler.Instance">
            <summary>
            Gets the singleton instance of <see cref="T:NonDisposableHttpClientHandler"/>.
            </summary>
        </member>
        <member name="M:NonDisposableHttpClientHandler.Dispose(System.Boolean)">
            <summary>
            Disposes the underlying resources held by the <see cref="T:NonDisposableHttpClientHandler"/>.
            This implementation does nothing to prevent unintended disposal, as it may affect all references.
            </summary>
            <param name="disposing">True if called from <see cref="M:NonDisposableHttpClientHandler.Dispose(System.Boolean)"/>, false if called from a finalizer.</param>
        </member>
    </members>
</doc>
